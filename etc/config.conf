core = {
	workers = "4";
};
transports = (
	{
		name = "ws";
		type = "websocket";
		secure = false;
		host = "0.0.0.0"; // 5.134.222.156:27080
		port = 27080;
	},
	{
		name = "http";
		type = "http";
		secure = false;
		host = "0.0.0.0";
		port = 27081;
	}
);
databases = (
	{
		name = "wgms_transactions";
		type = "mysql";
		dbserver = "127.0.0.1";
		dbuser = "wgms";
		dbpass = "password4wgms";
		dbname = "wgms_payments";
	},
	{
		name = "wgms_depository";
		type = "mysql";
		dbserver = "127.0.0.1";
		dbuser = "wgms";
		dbpass = "password4wgms";
		dbname = "wgms_depository";
	},
	{
		name = "wgms_products";
		type = "mysql";
		dbserver = "127.0.0.1";
		dbuser = "wgms";
		dbpass = "password4wgms";
		dbname = "wgms_products";
	}
);
services = (
	{
		name ="status";
		type="status";
		parts = (
			{
				type = "client";
				transport = "http";
				uri = "/status";
			}
		);
 	},
	{
		name ="products";
		type="products";
		parts = (
			{
				type = "admin";
				transport = "http";
				uri = "/products/admin";
			},
			{
				type = "client";
				transport = "http";
				uri = "/products/client";
			},
			{
				type = "facebook";
				transport = "http";
				uri = "/products/facebook";
			}
		);
	},
	{
		name ="transactions4payments";
		type="transactions";
		parts = (
			{
				type = "client",
				transport = "ws";
				uri = "/payments/transactions";
			}
		);
		filter = "payment";
	},
	{
		name ="transactions4depository";
		type="transactions";
		parts = (
			{
				type = "client",
				transport = "ws";
				uri = "/depository/transactions";
			}
		);
		filter = "pushDepo popDepo";
	},
	{
		name ="payments";
		type="payments";
		parts = (
			{
				type = "facebook";
				transport = "http";
				uri = "/payments/facebook";
			},
			{
				type = "vkontakte";
				transport = "http";
				uri = "/payments/vkontakte";
			},
			{
				type = "odnoklassniki";
				transport = "http";
				uri = "/payments/odnoklassniki";
			},
			{
				type = "moimir";
				transport = "http";
				uri = "/payments/moimir";
			},
			{
				type = "rockyou";
				transport = "http";
				uri = "/payments/rockyou";
			}
		);
		transactionsService = "transactions4payments";
	},
	{
		name ="depository";
		type="depository";
		parts = (
			{
				type = "client",
				transport = "ws";
				uri = "/depository/client";
			}
		);
		transactionsService = "transactions4depository";
	}
);
applications = (
	{
		type = "facebook";
		appId = "991616927598620";
		appKey = "6ad4ae0695b3574b94c01250e4160824";
	},
	{
		type = "vkontakte";
		appId = "5107415";
		appKey = "yAT5tBSiX9ILhNLUMptn";
	},
	{
	 	type = "odnoklassniki";
		appId = "1248309504";
		appKey = "9E336DC37495D4980F8351EE";
	},
	{
	 	type = "moimir";
		appId = "698794";
		appKey = "1c7962e778b6625573aae05391055e5f";
	},
	{
	 	type = "rockyou";
		appId = "01E7458156"; // for TESTING purposes
		appKey = "6F9BB1C8CCC7F6E2F6E989BA4D13B784";
	}
);

/*****************************************************************************
 * Конфигурация системы логгирования                                         *
 *****************************************************************************/
logs = {
	// Конфигурация синков
	sinks = (
/*		{
			// Имя синка
			name  = "file";

			// Тип синка
			type = "file"; // Вывод логов в файл

			// Формат вывода
			//   Описание можно посмотреть в документации к библиотеке P7
			//   http://baical.net/p7.html (дока в архиве)
			format = "%tm\t%tn\t%mn\t%lv\t%ms";

			// Папка логов
			directory = "/home/di/Projects/Primitive/logs/";

			// Настройка ротации логов
			//   100mb - создавать новый файл каждые 100 MB
			//   24hr - создавать новый файл каждые 24 часа
			rolling = "1hr";

			// Максимальное количество файлов. Самые старые удаляются.
			maxcount = 5;
		},
		{
			name  = "syslog";
			type = "syslog"; // Вывод в Syslog
			format = "%tm\t%tn\t%mn\t%lv\t%ms";
		},
*/		{
			name  = "console";
			type = "console"; // Вывод в консоль
			format = "%tm\t%tn\t%mn\t%lv\t%ms";
		}
	);

	// Конфигурация логгеров
	loggers = (
		{
			// Имя логгера
			//   имя '*' указывает конфиг для логгеров не сконфигурированных явно
			name = "*";

			// Используемый логгером синк
			sink = "console";

			// Уровень детализции лога
			//   Возможные значения: trace, debug, info, warn, error, crit, off
			level = "debug";
		}
	);
};

