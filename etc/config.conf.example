/*****************************************************************************
 * Конфиг сервера основан на библиотеке libconfig++                          *
 * Описание синтаксиса на русском можно посмотреть на хабре:                 *
 *   https://habrahabr.ru/post/148948/#para-configг                          *
 * Репозиторий библиотеки:                                                   *
 *   https://github.com/hyperrealm/libconfig                                 *
 *****************************************************************************/

/*****************************************************************************
 * Параметры ядра приложения                                                 *
 *****************************************************************************/
core = {
	workers = 4; // Количество рабочих потоков
};

/*****************************************************************************
 * Список активных транспортов                                               *
 *****************************************************************************/
transports = (
	{
		// Имя транспорта. Произвольный буквенно-цифровой идентификатор
		name = "transport1";

		// Тип транспорта
		//   Доступные значения: http, websocket, packet
		type = "http";

		// Флаг безопасного соединения
		//   При включении трафик оборачивается в SSL.
		//   Не рекоммендуется, так как используется самоподписаный сертификат
		secure = false;

		// Параметры слушающего сокета
		host = "0.0.0.0";   // IP
		port = 54321;       // Порт
	}
);

/*****************************************************************************
 * Конфигурация для подключения к базам данных                               *
 *****************************************************************************/
databases = (
	{
		// Имя пула коннектов к БД
		//   Уникальный буквенно-цифровой идентификатор
		name = "common";

		// Тип сервера БД
		//   Реализованы: mysql
		type = "mysql";

		// Параметры подключения к серверу БД
		dbserver = "127.0.0.1";               // IP сервера БД (при TCP подключении)
		dbport = 3306;                        // Порт сервера БД (при TCP подключении)
		dbsocket = "/run/mysqld/mysqld.sock"; // Полное имя сокета (для UNIX-socket)

		// Параметры доступа
		dbuser = "test"; // Имя пользователя
		dbpass = "test"; // Пароль пользователя
		dbname = "test"; // Имя БД по умолчанию
	}
);

/*****************************************************************************
 * Список активных сервисов                                                  *
 *****************************************************************************/
services = (
	{
		// Имя сервиса
		name="status";

		// Тип сервиса
		type="status";

		// Описание частей сервиса для работы с 3rd-party приложениями
		//   Каждая часть реализует логику для конкретной третьей стороны.
		//   Может повторяться для работы на разных transport+endpoints
		parts = (
			{
				// Тип составной части сервиса
				//   Зависит от реализации сервиса
				type = "client";

				// Используемый транспорт
				//   Идентификатор транспорта, описаный в конфиге
				transport = "transport1";

				// Начальная часть URI для роутинга
				//   Имеет смысл только для транспорта, основанного на http
				uri = "/status";
			}
		);
	}
);

/*****************************************************************************
 * Конфигурация внешних приложений                                           *
 *****************************************************************************/
applications = (
	{
		// Тип 3rd-party приложения
		type = "admin";

		// Идентификатор приложения
		//   В рамках одного сервера предполагается, что appId уникален,
		//   независимо от типа. С точки зрения сервера это индекс
		appId = "statusOfShard";

		// Ключ или секрет приложения для формирования подписи запросов
		appKey = "*sekret*";
	}
);

/*****************************************************************************
 * Конфигурация системы логгирования                                         *
 *****************************************************************************/
logs = {
	// Конфигурация синков
	sinks = (
		{
			name  = "console";
			type = "console"; // Вывод в консоль
			format = "%tm\t%tn\t%mn\t%lv\t%ms";
/*		},
		{
			name  = "syslog";
			type = "syslog"; // Вывод в Syslog
			format = "%tm\t%tn\t%mn\t%lv\t%ms";
		},
		{
			// Имя синка
			name  = "file";

			// Тип синка
			type = "file"; // Вывод логов в файл

			// Формат вывода
			//   Описание можно посмотреть в документации к библиотеке P7
			//   http://baical.net/p7.html (дока в архиве)
			format = "%tm\t%tn\t%mn\t%lv\t%ms";

			// Папка логов
			directory = "/opt/logs/";

			// Настройка ротации логов
			//   100mb - создавать новый файл каждые 100 MB
			//   24hr - создавать новый файл каждые 24 часа
			rolling = "100mb"; // "24hr"

			// Максимальное количество файлов. Самые старые удаляются.
			maxcount = 500;
*/		}
	);

	// Конфигурация логгеров
	loggers = (
		{
			// Имя логгера
			//   имя '*' указывает конфиг для логгеров не сконфигурированных явно
			name = "*";

			// Используемый логгером синк
			sink = "console";

			// Уровень детализции лога
			//   Возможные значения: trace, debug, info, warn, error, crit, off
			level = "info";
		}
	);
};
